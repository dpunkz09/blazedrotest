//===== EinherjarRO Scripts ================================== 
//= Auto-Event System 
//===== By: ================================================== 
//= Stolao
//===== Current Version: ===================================== 
//= 1.93
//===== Compatible With: ===================================== 
//= rAthena SVN
//===== Description: ========================================= 
//= Will Automatically pick one event from the events in its 
//= list every hour and run it. Giving out an Item and 
//= Announcing the Winner. 
//=
//= Manhunt event origionally a release by stydianx 
//= from http://rathena.org/board/topic/83791-man-hunt-event/ 
//===== Uses: ================================================
//= The Maze event is held on a custom map, Download here 
//= https://rathena.org/board/index.php?app=core&module=attach&section=attach&attach_id=10040
//===== Comments: ============================================
//= [Stolao]
//= Convert Manhunt to new format
//= Add Events DB Event, MVP Arena, Invasion, Ragnarok Training
//= Add Events Mushroom, Disguise, Devil Square
//= Add a vote for event option with queue
//= Spell Check
//= Make "Zeny" changable for Points
//= Make customisable in game by gm
//= Add more events
//= Optimize
//===== Additional Comments: =================================
//= 1.00 Basic Layout, Useing just 99-PVP
//= 1.01 Add Zombie Survival
//= 1.02 Add 1234
//= 1.03 More Monster in Zombie
//= 1.04 Fixed Stair Bug in 1234
//= 1.05 Swich 1234 to even odd afer 7 rolls
//= 1.06 More Monster in Zombie
//= 1.07 More and Shorter Rounds in Zombie
//= 1.08 Made PvpEvent 20 min limit was 10 min
//= 1.09 Swich 1234 to last box after 8 even odd rolls
//= 1.0A Shortened PvpEvent script by 54 line
//= 1.0B Removed even odd afer 7 rolls in 1234
//= 1.0C Removed last box after 8 even odd rolls in 1234
//= 1.0D Made 1234 function baced
//= 1.0E Made PvpEvent function based
//= 1.0F Made Zombie function based
//= 1.10 Added Startup via NPC Whisper
//= 1.11 Removed "tie" in 1234
//= 1.12 Made 1234 Configable uing arrayed server data
//= 1.13 Added Toggable Prize item & Zeny to 1234
//= 1.14 Added Toggable Cost item & Zeny to 1234
//= 1.15 Added Prize Pool item & Zenyto 1234
//= 1.16 Replaced 99-Pvp with PvpEvent
//= 1.17 Made PVP Configable uing arrayed server data
//= 1.18 Added Toggable Prize item & Zeny to PVP
//= 1.10 Added Toggable Cost item & Zeny to PVP
//= 1.1A Added Prize Pool to item & Zeny PVP
//= 1.1B Made Zombie Kinda Configable (might add more latter)
//= 1.1C Added Toggable Prize item & Zeny to Zombie
//= 1.1D Added Toggable Cost item & Zeny to Zombie
//= 1.1E Added Prize Pool to item & Zeny Zombie
//= 1.1F Fixed minor bug in Zombies Config
//= 1.20 Fixed minor bug in prize scripts
//= 1.21 Fixed typo in run pvp
//= 1.22 Fixed check Zeny in all scripts
//= 1.23 Fixed check items in all scripts
//= 1.24 Fixed major bug in Config
//= 1.25 Fixed "bug" reading strings as numbers
//= 1.26 Added event check, see if events are running already
//= 1.27 Added Reset to config npc
//= 1.28 Fixed bug in the prize giving phase of events
//= 1.29 Switch prizes to close2;
//= 1.2A Added missing Close; after Event check in whisper
//= 1.2B Added Start of In Game Setup menu
//= 1.2C Fixed Type in InGame Setup ":" when ";"
//= 1.2D Fixed Missing case in 1234
//= 1.2F Changed Perm Server Variables to Temp
//= 1.30 replaced Monsters name with --ja--
//= 1.31 Changed Zombie to use while, shortend script
//= 1.32 Made PVP have a chance of being class specific
//= 1.33 Fixed bug with pvp class specific, logic error 
//= 1.34 Added @joinevent Command (see bindatcmnd.txt)
//= 1.35 Removed join event npcs
//= 1.36 Made @runevent Command (see bindatcmnd.txt)
//= 1.37 Removed Labels from Pvp script
//= 1.38 Removed Labels from Dice Event
//= 1.39 Added Agit check in multiple locations
//= 1.3A Added $@Conditions to Zombie
//= 1.3B Changed $@Conditions&4 formula to reflect $@MaxTime
//= 1.3C Removed dependency on bindatcmd.txt
//= 1.3D Changed hideonnpc to disablenpc
//= 1.3E Changed hideoffnpc to enablenpc
//= 1.3F Added a missing else to 1234 and pvp events
//= 1.40 Made Zombie Survival have steadily increasing waves
//= 1.41 Added Maze Event
//= 1.42 Added Menu on click, in case want to add a physical location
//= 1.43 Optimized OnJoinEvent Label a little
//= 1.44 Replaces a dispbutton with mes under OnRunEvent
//= 1.45 Optimized 1234 Script a little
//= 1.46 replaced while -> for
//= 1.47 Optimized Beginging Event Countdown for all events
//= 1.48 Made Zombies IDs Configuable
//= 1.49 Made Zombies rate Configurable
//= 1.4A Made killing zombie penilty greater
//= 1.4B Optimized In event countdowns for all events
//= 1.4C Fixed an extra '{' added by mistake
//= 1.4D Condenced @$MobsUsed + @$MobsRate -> @$Mobs
//= 1.4E Removed Unessisare stopnpctimer (from pre 1.0F)
//= 1.4F Added Poring Event
//= 1.50 Optimized PVP and Maze a little
//= 1.51 Added $@SpecialConditions Check for all events on initiation (future in game gm config)
//= 1.52 Fixed Time Remaining Countdown, was dispalying +1 min off
//= 1.53 Replace 99_pvp for pvp_n_1-5, bug on my client
//= 1.54 Replaced areawards with mapwarp when suitable
//= 1.55 Added mapwarp to initiation of scripts
//= 1.56 Fixed a bug in Poring, not summoning wrong Poring
//= 1.57 Changed $@CurrentEvent -1 -> -1*$@CurrentEvent after start of event
//= 1.58 Added $@Conditions&2 (precentheal 100,100) to PvPEvent
//= 1.59 Added Manhunt Event
//= 1.5A Fixed bug with Manhunt Target being killable after event still
//= 1.5B Began Converting variable from global temp to getarg()
//= 1.5C Made @joinevent into a function based
//= 1.5D Made $@Mobs into a imploded var
//= 1.5E Converted Zombie to getarg()
//= 1.5F Converted Dice to getarg()
//= 1.60 Removed area warp vars for statics
//= 1.60 Converted PvP to getarg()
//= 1.61 Converted Maze to getarg()
//= 1.62 Added a sc_end SC_ALL condition to defalt Maze Event
//= 1.63 Fixed explode -> int fail in Zombie Event
//= 1.64 Changed sc_end -> callfunc("dispell");
//= 1.65 Replaced Zombie Events MobArray -> While( < getarccount())
//= 1.66 Removed Debug Messages
//= 1.67 Moved Mob array further down in Zombie Run
//= 1.68 Fixed a bug in Zombie Event having 1394 waves
//= 1.69 Rmoved mob respawing on killed from Zombie Event
//= 1.6A Added Decrease AGi and Damage taken when killing Zombies
//= 1.6B Changed Zombie Event for Max Level to 45/10 Novice only (my servers max novice level)
//= 1.6C Fixed Missing getarg in Zombie Survival
//= 1.6D Converted Zombie Reward to SQL Querry
//= 1.6E Converted Dice Reward to SQL Querry
//= 1.6F Converted PvP Reward to SQL Querry
//= 1.70 Removed Redundant Lines from PvP Run
//= 1.71 Removed Redundant lines from Dice Run
//= 1.72 Removed Redundant Lines from Zombie Run
//= 1.73 Removed Mes from Maze Prize
//= 1.74 Removed Redundant Disable npc from Event Manager
//= 1.75 Fixed Bug in Maze allowing multiple winners
//= 1.76 Replaced 'Mes' with 'Message' in GMs Event Manager
//= 1.77 Changed 'MazePrize' to 'Event_Agent#Maze'
//= 1.78 Removed repeat callfunc for maze event
//= 1.79 Changed 'mes' to 'message' when no event in JoinEvent
//= 1.7A Added 'detachrid;' to Zombie SQl Querry
//= 1.7B Added 'detachrid;' to Dice SQl Querry
//= 1.7C Added 'detachrid;' to PvP SQl Querry
//= 1.7D Added '&16' to join event, Adds aid to list
//= 1.7E Added '&32' to join event, disables warp feature
//= 1.7F Converted 'LuckyRun' to new format
//= 1.80 Added Lucky Event to Running Event List
//= 1.81 Added Failed Event to Lucky Event
//= 1.82 Added vending check to Lucky Event
//= 1.83 Added deletarray to Lucky Event
//= 1.84 Added Npcwalk to Cluckers
//= 1.85 Increase win rate of cluckers from 0.53% to 0.67%
//= 1.86 Fixed 2 missing {
//= 1.87 removed obsolete 'close2' from GM Event Manager
//= 1.88 Fixed bug with '&32' in JoinEvent
//= 1.89 Convert SQL Querry to "&16' reward system for PvP
//= 1.8A Convert SQL Querry to "&16' reward system for Zombie
//= 1.8B Convert SQL Querry to "&16' reward system for Dice
//= 1.8C Fixed 'event full' bug in Pvp
//= 1.8D Fixed 'event full' bug in Zombie
//= 1.8E Fixed 'event full' bug in Dice
//= 1.8F Fixed 	incorrect enable npc in Maze event
//= 1.90 Changed last menu of gms runevent to "mes"
//= 1.91 Added close2; to each case for gms runevent
//= 1.92 Changed close -> end for runevents agit and event checks
//= 1.93 Added Bombporing script by jazznar (modified) https://rathena.org/board/topic/103253-just-another-bombring-event-script/#entry290661
//===== Contact Ifo: =========================================
//= [Stolao] 
//= Email: Taingram11@gmail.com
//============================================================

-	script	Event_Management	-1,{
OnWhisperGlobal:
	if(getgroupid() >= 60){
		message strcharinfo(0),"[Event Management]: What would you like to do?";
		menu "Join Event",-,"RunEvent",OnRunEvent;
	}
OnJoinEvent:
	switch($@CurrentEvent){
		default:	message strcharinfo(0),"[Event Management]: No events to join at the moment.";	end;
//callfunc("JoinEvent",<eventname>,<minplayers>,<maxplayers>,<itemcost>,<itemqnt>,<zenycost>,<minbase>,<maxbase>,<minjob>,<maxjob>,<reqjob>,<conditions>,<eventmap>,<mapx>,<mapy>,<length>);

		case 1:	callfunc("JoinEvent","Zombie Survival",1,128,0,0,0,0,45,0,10,0,27,"1@zombie",0,0,10);	break;
		case 2:	callfunc("JoinEvent","Dice",2,128,0,0,0,0,1000,0,1000,-1,16,"quiz_01",205,92,0);	break;
		case 3:	callfunc("JoinEvent","PvP",3,128,0,0,0,0,1000,0,1000,-1,18,"pvp_n_1-5",0,0,20);	break;
		case 4:	callfunc("JoinEvent","Maze",1,0,0,0,0,0,1000,0,1000,-1,1,"maze",371,143,30);	break;
		case 5: callfunc("JoinEvent","Poring",1,0,0,0,0,0,1000,0,1000,-1,0,"pvp_n_1-5",0,0,30);	break;
		case 6: callfunc("JoinEvent","Man Hunt",3,127,0,0,0,0,1000,0,1000,-1,19,"pvp_n_1-5",0,0,10);	break;
		case 7:	callfunc("JoinEvent","Cluckers",0,0,0,0,0,0,1000,0,1000,-1,0,"prontera",156,219,0);	break;
		case 8: callfunc("JoinEvent","Lucky",5,128,0,0,0,0,1000,0,1000,-1,48,"prontera",155,181,0);	break;
		case 9: callfunc("JoinEvent","Bombring",1,128,0,0,0,0,1000,0,1000,-1,16,"quiz_02",59,345,5);	break;
//Future use for GM Customazation
		case 255: callfunc("JoinEvent",.EventName$,.Minplayers,.Maxplayers,.ItemReq$,.ItemQnt$,.ZenyCost,.MinBase,.MaxBase,.MinJob,.MaxJob,.ReqJob,.Conditions,.EventMap$,.MapX,.MapY,.Duration);	break;
	}
end;
OnRunEvent:
	if(getgroupid()<60) end;
	if($@CurrentEvent){ message strcharinfo(0),"[Event Management]: Sorry an event is already running"; end;
	} else if(agitcheck()||agitcheck2()){  message strcharinfo(0),"[Event Management]: Sorry cannot run event during woe"; end;
	} else {
		mes "[Event Management]";
		mes "Ok boss what event should we run today?";
		switch(select("Zombie:Dice:PVP:Maze:Poring:Man-Hunt:Cluckers:Lucky")){
			case 1:	close2;	detachrid;
				callfunc("ZombieRUN",1,"Zombie Survival","1@zombie","1@zombie",175,120,0,10,1394,10,1423,5,1298,1);
			end;
			case 2:	close2;	detachrid;
				callfunc("1234RUN",2,"Dice","quiz_01",2,1,100);
			end;
			case 3:	close2;	detachrid;
				callfunc("PvpEventRUN",3,"PvP","pvp_n_1-5",3,20);
			end;
			case 4:	close2;	detachrid;
				callfunc("MazeRUN",4,"Maze","maze",1,30);
			end;
			case 5:	close2;	detachrid;
				callfunc("PoringRUN",5,"Poring","pvp_n_1-5",1,2,30,1725,5,"Porjng|P0ring|Porlng|Porimg|Porinq|Poporing|This One|Right|Kill Me|Poning|qoring|Pooring|Pouring|Polling|~Poring~|Winner|Prize|Porirg|Paring");
			end;
			case 6:	close2;	detachrid;
				callfunc("CluckersRun",7,"Cluckers",30);
			end;
			case 7:	close2;	detachrid;
				callfunc("ManHuntRUN",6,"Man Hunt","pvp_n_1-5",10,3);
			end;
			case 8:	close2;	detachrid;
				callfunc("LuckyRun",8,"Lucky",5,1);
			end;
			case 9:	close2;	detachrid;
				callfunc("BombringRun",9,"Bombring","quiz_02",1,5);
			end;
			default:
			close;
		} 
	}
end;
OnMinute55:
	if(agitcheck()||agitcheck2()||$@CurrentEvent) end;
	switch(rand(1,7)){
		case 1:		callfunc("ZombieRUN",1,"Zombie Survival","1@zombie","1@zombie",175,120,0,10,1394,10,1423,5,1298,1);	break;
		case 2:		callfunc("PvpEventRUN",3,"PvP","pvp_n_1-5",3,20);	break;
		case 3:		callfunc("1234RUN",2,"Dice","quiz_01",2,1,100);		break;
		case 4:		callfunc("MazeRUN",4,"Maze","maze",1,30);		break;
		case 5:		callfunc("PoringRUN",5,"Poring","pvp_n_1-5",1,2,30,1725,5,"Porjng|P0ring|Porlng|Porimg|Porinq|Poporing|This One|Right|Kill Me|Poning|qoring|Pooring|Pouring|Polling|~Poring~|Winner|Prize|Porirg|Paring");		break;
		case 6:		callfunc("CluckersRun",7,"Cluckers",30);	break;
		case 7:		callfunc("LuckyRun",8,"Lucky",5,1);	break;
		case 8:		callfunc("BombringRun",9,"Bombring","quiz_02",1,5);	break;
		case 9:		callfunc("ManHuntRUN",6,"Man Hunt","pvp_n_1-5",10,3);	break;

//		case :		//Mvp Arena			break;	//Summons a random mvp and turns pvp on
//		case :		//Rag-narok training		break;	//Summons random mvps (no drops) from list continuesly with pvp on, gives buffs to all after and prize 4 lms
//		case :		//X-O quiz_01 140 277		break;	//like 1234 but just 2 squares
//		case :		//Invasion			break;	//save old_morocc from satan morroc
//		case :		//lucky Pick			break;	//pick one person who enters map and gives them a prize
//		case :		//DB event			break:	//Auto summons monsters from dead branches (pvp on)
	}
end;
OnInit:
	bindatcmd("joinevent","Event_Management::OnJoinEvent",0,99);
	bindatcmd("runevent","Event_Management::OnRunEvent",60,99);
	set $@CurrentEvent,0;
	disablenpc "ManhuntPrize";
end;
}


function	script	JoinEvent	{
//callfunc("JoinEvent",<eventname>,<minplayers>,<maxplayers>,<itemcost>,<itemqnt>,<zenycost>,<minbase>,<maxbase>,<minjob>,<maxjob>,<reqjob>,<conditions>,<eventmap>,<mapx>,<mapy>,<length>);
	if($@CurrentEvent <= 0 ){ message strcharinfo(0),"[Event Management]: No events to join at the moment."; close;
	} else {
		mes "[Event Management]";
		if( (getarg(6,0)||getarg(8,0)) && (getarg(7,200)||getarg(9,70)) ) { mes "This is a "+getarg(0,"Test")+" Event for "+((getarg(10,-1) >= 0)?""+jobname(getarg(10,-1))+"":"Players")+" between levels "+getarg(6,0)+"/"+getarg(8,0)+" and "+getarg(7,200)+"/"+getarg(9,70)+"";
		} else if(getarg(6,0)||getarg(8,0)){ mes "This is a "+getarg(0,"Test")+" Event for "+((getarg(10,-1) >= 0)?""+jobname(getarg(10,-1))+"":"Players")+" above level "+getarg(7,200)+"/"+getarg(9,70)+"";
		} else if(getarg(7,200)||getarg(9,70)){ mes "This is a "+getarg(0,"Test")+" Event for "+((getarg(10,-1) >= 0)?""+jobname(getarg(10,-1))+"":"Players")+" below level "+getarg(7,200)+"/"+getarg(9,70)+"";
		} else { mes "This is a "+getarg(0,"Test")+" Event "+((getarg(10,-1) >= 0)?"for "+jobname(getarg(10,-1))+"":""); }
		if(getarg(1,0)) mes "Must be at least "+getarg(1,0)+" players for event to take place";
		if(getarg(3,0) && getarg(4,0)) mes "You will also need "+getarg(4,0)+" "+getitemname(getarg(3,0))+" to join.";
		if(getarg(5,0)) mes "You will also need "+getarg(5,0)+"z to join.";
		mes "Would you like to Join?";
		if(select("No:Yes") == 1){
				mes "Ok come back later";
				close;
		} else if((BaseLevel < getarg(6,0) && getarg(6,0)) || (JobLevel < getarg(8,0) && getarg(8,0)) || (BaseLevel > getarg(7,200) && getarg(7,200)) || (JobLevel > getarg(9,70) && getarg(9,70)) || (getarg(10,-1) >= 0 && BaseClass != getarg(10,-1))){
			if( ( getarg(6,0)||getarg(8,0) ) && ( getarg(7,200)||getarg(9,70) ) ) { mes "Sorry this is a "+getarg(0,"Test")+" Event for "+((getarg(10,-1) >= 0)?""+jobname(getarg(10,-1))+"":"Players")+" between levels "+getarg(6,0)+"/"+getarg(8,0)+" and "+getarg(7,200)+"/"+getarg(9,70)+"";
			} else if(getarg(6,0)||getarg(8,0)){ mes "Sorry this is a "+getarg(0,"Test")+" Event for "+((getarg(10,-1) >= 0)?""+jobname(getarg(10,-1))+"":"Players")+" above level "+getarg(7,200)+"/"+getarg(9,70)+"";
			} else if(getarg(7,200)||getarg(9,70)){ mes "Sorry this is a "+getarg(0,"Test")+" Event for "+((getarg(10,-1) >= 0)?""+jobname(getarg(10,-1))+"":"Players")+" below level "+getarg(7,200)+"/"+getarg(9,70)+"";
			} else { mes "Sorry this is a "+getarg(0,"Test")+" Event "+((getarg(10,-1) >= 0)?"for "+jobname(getarg(10,-1))+"":""); }
			close;
		} else if(getarg(3,0) > 0 && getarg(4,0)){ if(countitem(getarg(3,0)) < getarg(4,0)){ mes "Sorry but, You will need "+getarg(4,0)+" "+getitemname(getarg(3,0))+" to join."; close; }
		} else if(getarg(5,0) > Zeny){ mes "Sorry but, You will need "+getarg(5,0)+"z to join."; close;
		} else if(getarg(2,127) && getmapusers(getarg(12,"prontera")) >= getarg(2,127)){ mes "Sorry event is full, try again next time."; close;
		} else {
			if(getarg(11,0)&16){
				if(getarraysize($@EventPlayers) < getarg(2,128)){
					for(.@i = 0; .@i < getarraysize($@EventPlayers); .@i++){
						if($@EventPlayers[.@i] == getcharid(3)){ mes "Sorry your already listed in event."; close; }
					}
					setarray $@EventPlayers[getarraysize($@EventPlayers)],getcharid(3);
				} else { mes "Sorry event is full, try again next time."; close; }
			}
			if(getarg(11,0)&1) callfunc("dispell");
			if(getarg(11,0)&2) percentheal 100,100;
			if(getarg(11,0)&4) sc_start SC_DECREASEAGI,300000+getarg(15,0)*60000,10;
			if(getarg(11,0)&8) atcommand "@storeall";
			if(getarg(3,0) && getarg(4,0)) delitem getarg(3,0),getarg(4,0);
			if(getarg(5,0)) set Zeny,zeny-getarg(5,0);
			if(getarg(11,0)&32) end;
			warp getarg(12,"prontera"),getarg(13,0),getarg(14,0);
		}
	}
}


//========================= Running Event ===============================



function	script	ZombieRUN	{
//callfunc("ZombieRUN",<eventID>,<eventname>,<eventmap>,<prizemap>,<prizex>,<prizey>,<minplayers>,<length>,<mobsarray>);
	if($@CurrentEvent||agitcheck()||agitcheck2()){ end; }
	mapwarp getarg(2,"1@zombie"),"prontera",155,181;
	set $@CurrentEvent,getarg(0,1);
	for(set .@i,5; .@i > 0; set .@i,.@i-1){
		Announce ""+getarg(1,"Zombie Survival")+" Event Will begin in "+.@i+" Mins!",8;
		Announce "Please type @joinevent to join",8;
		sleep 60000;
	}
	Announce ""+getarg(1,"Zombie Survival")+" Event Has Begun!",8;
	set $@CurrentEvent,-getarg(0,1);
	if(getmapusers(getarg(2,"1@zombie"))<getarg(6,0)){
		mapannounce getarg(2,"1@zombie"),"Sorry there are not enough players for this event to take place",8;
		mapwarp getarg(2,"1@zombie"),"prontera",155,181;
	} else {
		//Insert Rules
		set .@gc, getargcount()-8;
		for ( .@i = 0; .@i < .@gc; set .@i,.@i + 1){
			setarray .@Mobs[.@i], getarg(.@i + 8,0);
		}
		sleep 25000;
		for(set .@wave,0; .@wave < getarg(7,10); set .@wave,.@wave+1){
			if(.@wave < getarg(7,10)){
				mapannounce getarg(2,"1@zombie"),"Wave "+(.@wave + 1)+"!",8;
			} else {
				mapannounce getarg(2,"1@zombie"),"FIANL WAVE!",8;
			}
			sleep 1000;
			for(set .@i,5; .@i > 0; set .@i,.@i-1){
				mapannounce getarg(2,"1@zombie"),""+.@i+"...",8;
				sleep 1000;
			}
			mapannounce getarg(2,"1@zombie"),"Begin Wave!",8;
			for(set .@i,0; (.@i < getarraysize(.@Mobs)); set .@i,.@i+2){
				monster getarg(2,"1@zombie"),0,0,"--ja--",.@Mobs[.@i], .@wave * .@Mobs[.@i+1],"ZombiePrize::OnKillZombie";
			}
			if(!getmapusers(getarg(2,"1@zombie"))){
				set .@wave,getarg(7,10)+.@wave;
			} else {
				mapannounce getarg(2,"1@zombie"),"There are "+getmapusers(getarg(2,"1@zombie"))+" Players",8;
				sleep 56000;
			}
		}
		mapannounce getarg(2,"1@zombie"),""+getarg(1,"Zombie Survival")+" is now over!",8;
		killmonsterall getarg(2,"1@zombie");
		while(getmapusers(getarg(2,"1@zombie"))){
			for(.@i = 0; .@i < getarraysize($@EventPlayers); .@i++){
				if(attachrid($@EventPlayers[.@i])){
					if(strcharinfo(3) == getarg(2,"pvp_n_1-5")){
						announce "Congrats to, "+strcharinfo(0)+" a winner in the "+getarg(1,"Dice")+" Event!",bc_blue|bc_all;
						getitem 7859,1;
						warp "prontera",155,181;
						detachrid;
					}
				}
			}
		}
	}
	set $@CurrentEvent,0;
	end;
}


function	script	1234RUN	{
//callfunc("1234RUN",<eventID>,<eventname>,<eventmap>,<minplayers>,<winers>,<maxtime>);
	if($@CurrentEvent||agitcheck()||agitcheck2()){ end; }
	mapwarp getarg(2,"quiz_01"),"prontera",155,181;
	set $@CurrentEvent,getarg(0,2);
	for(set .@i,5; .@i > 0; set .@i,.@i-1){
		Announce ""+getarg(1,"Dice")+" Event Will begin in "+.@i+" Mins!",8;
		Announce "Please type @joinevent to join",8;
		sleep 60000;
	}
	Announce ""+getarg(1,"Dice")+" Event Has Begun!",8;
	set $@CurrentEvent,-$@CurrentEvent;
	sleep 9000;
	if(getmapusers(getarg(2,"quiz_01"))<getarg(3,"2")){
		mapannounce getarg(2,"quiz_01"),"Sorry there are not enough players for this event to take place",8;
		mapwarp getarg(2,"quiz_01"),"prontera",155,181;
		set $@CurrentEvent,0;
		end;
	} else {
		mapannounce getarg(2,"quiz_01"),"Ok the rules of this "+getarg(1,"Dice")+" Event are as follows",8;	sleep 5000;
		mapannounce getarg(2,"quiz_01"),"Each player picks a box 1, 2, 3 or 4",8;				sleep 5000;
		mapannounce getarg(2,"quiz_01"),"There will be a count down from 10 to 0",8;				sleep 5000;
		mapannounce getarg(2,"quiz_01"),"at 0 a four sided die will be rolled",8;				sleep 5000;
		mapannounce getarg(2,"quiz_01"),"Anyone in the box of the number rolled will be warped to town",8;	sleep 5000;
		mapannounce getarg(2,"quiz_01"),"as well as anyone on the stairs or outside the box",8;			sleep 5000;
		mapannounce getarg(2,"quiz_01"),"the number of players remaining will be announced",8;			sleep 5000;
		mapannounce getarg(2,"quiz_01"),"this prosses will repeat till only one player remains",8;		sleep 5000;
		mapannounce getarg(2,"quiz_01"),"take a few moments to fnd a box",8;					sleep 15000;
		mapannounce getarg(2,"quiz_01"),"we will now begin, please find a box",8;				sleep 6000;
		for(set .@1234,0; .@1234 < getarg(5,100); set .@1234,.@1234+1){
			for(set .@i,10; .@i > 0; set .@i,.@i-1){	mapannounce getarg(2,"quiz_01"),""+.@i+"...",8;	sleep 1000;	}
			set .@i,rand(1,4);
			mapannounce getarg(2,"quiz_01"),"0... Good Bye Box "+.@i+"",8;
			switch(.@i){
				case 1:	areawarp getarg(2,"quiz_01"),183,81,191,59,"prontera",155,181;	break;
				case 2:	areawarp getarg(2,"quiz_01"),195,81,203,59,"prontera",155,181;	break;
				case 3:	areawarp getarg(2,"quiz_01"),207,81,215,59,"prontera",155,181;	break;
				case 4:	areawarp getarg(2,"quiz_01"),219,81,227,59,"prontera",155,181;	break;
			}
			areawarp getarg(2,"quiz_01"),182,94,228,88,"prontera",155,181;	//Upper Area
			areawarp getarg(2,"quiz_01"),185,87,188,82,"prontera",155,181;	//Stairs 1
			areawarp getarg(2,"quiz_01"),197,87,200,82,"prontera",155,181;	//Stairs 2
			areawarp getarg(2,"quiz_01"),209,87,212,82,"prontera",155,181;	//Stairs 3
			areawarp getarg(2,"quiz_01"),221,87,224,82,"prontera",155,181;	//Stairs 4
			if(getmapusers(getarg(2,"quiz_01"))<=getarg(4,1)){	set .@1234,getarg(5,100)+1;
			} else {
				mapannounce getarg(2,"quiz_01"),"There are "+getmapusers(getarg(2,"quiz_01"))+" Players Remaining.",8;
				mapannounce getarg(2,"quiz_01"),"Take a few moments if you want to change boxes.",8;
				sleep 20000;
			}
		}
		mapannounce getarg(2,"quiz_01"),""+getarg(1,"Dice")+" Event is over",8;
		while(getmapusers(getarg(2,"quiz_01"))){
			for(.@i = 0; .@i < getarraysize($@EventPlayers); .@i++){
				if(attachrid($@EventPlayers[.@i])){
					if(strcharinfo(3) == getarg(2,"pvp_n_1-5")){
						announce "Congrats to, "+strcharinfo(0)+" a winner in the "+getarg(1,"Dice")+" Event!",bc_blue|bc_all;
						getitem 7859,1;
						warp "prontera",155,181;
						detachrid;
					}
				}
			}
		}
		set $@CurrentEvent,0;
		end;
	}
}


function	script	PvpEventRUN	{
//callfunc("PvpEventRUN",<eventid>,<eventname>,<eventmap>,<minplayers>,<length>);
	if($@CurrentEvent||agitcheck()||agitcheck2()){ end; }
	mapwarp getarg(2,"pvp_n_1-5"),"prontera",155,181;
	pvpoff getarg(2,"pvp_n_1-5");
	deletearray $@EventPlayers[0],getarraysize($@EventPlayers);
	set $@CurrentEvent,getarg(0,3);
	for(set .@i,5; .@i > 0; set .@i,.@i-1){
		Announce ""+getarg(1,"PvP")+" Event Will begin in "+.@i+" Mins!",8;
		Announce "Please type @joinevent to join",8;
		sleep 60000;
	}
	Announce ""+getarg(1,"PvP")+" Event Has Begun!",8;
	set $@CurrentEvent,-$@CurrentEvent;
	sleep 9000;
	if(getmapusers(getarg(2,"pvp_n_1-5"))<getarg(3,3)){
		mapannounce getarg(2,"pvp_n_1-5"),"Sorry there are not enough players for this event to take place",8;
	} else {		mapannounce getarg(2,"pvp_n_1-5"),"The Rules of this event are as follows",8;	
		sleep 5000;	mapannounce getarg(2,"pvp_n_1-5"),"This is a Free for all Last man Standing",8;
		sleep 5000;	mapannounce getarg(2,"pvp_n_1-5"),"there is a "+getarg(4,20)+" min time limit in place if there is no clear winner within "+getarg(4,20)+" mins the Event ends",8;
		sleep 5000;	mapannounce getarg(2,"pvp_n_1-5"),"Everyone has 1 Life so Res, Ygg Leafs and Kazail dont work",8;
		sleep 5000;	mapannounce getarg(2,"pvp_n_1-5"),"Spread out PVP will begin in 10...",8;	sleep 1000;
		for(set .@i,9; .@i > 0; set .@i,.@i-1){	mapannounce getarg(2,"pvp_n_1-5"),""+.@i+"...",8;	sleep 1000;	}
		pvpon getarg(2,"pvp_n_1-5");
		mapannounce getarg(2,"pvp_n_1-5"),"Begin",8;
		sleep 5000;
		for(set .@PVP,0; .@PVP < getarg(4,20); set .@PVP,.@PVP+1){
			if(getmapusers(getarg(2,"pvp_n_1-5"))<2){ set .@PVP,.@PVP+getarg(4,20);
			} else { mapannounce getarg(2,"pvp_n_1-5"),"There are "+getmapusers(getarg(2,"pvp_n_1-5"))+" Players Remaining",8; }
			sleep 60000;
		}
		if(getmapusers(getarg(2,"pvp_n_1-5")) == 1){
			for(.@i = 0; .@i < getarraysize($@EventPlayers); .@i++){
				if(attachrid($@EventPlayers[.@i])){
					if(strcharinfo(3) == getarg(2,"pvp_n_1-5")){
						announce "Congrats to, "+strcharinfo(0)+" a winner in the "+getarg(1,"Dice")+" Event!",bc_blue|bc_all;
						getitem 7859,1;
						warp "prontera",155,181;
						detachrid;
					}
				}
			}
		} else { mapannounce getarg(2,"pvp_n_1-5"),"Time Is up",8; }
	}
	pvpoff getarg(2,"pvp_n_1-5");
	deletearray $@EventPlayers[0],getarraysize($@EventPlayers);
	set $@CurrentEvent,0;
	mapwarp getarg(2,"pvp_n_1-5"),"prontera",155,181;
	end;
}


function	script	MazeRUN	{
//callfunc("MazeRUN",<eventid>,<eventname>,<eventmap>,<minplayers>,<length>);
	if($@CurrentEvent||agitcheck()||agitcheck2()){ end; }
	mapwarp getarg(2,"maze"),"prontera",155,181;
	enablenpc "mazeroadblock";
	disablenpc "Event_Agent#Maze";
	set $@CurrentEvent,getarg(0,4);
	for(set .@i,5; .@i > 0; set .@i,.@i-1){
		Announce ""+getarg(1,"Maze")+" Event Will begin in "+.@i+" Mins!",8;
		Announce "Please type @joinevent to join",8;
		sleep 60000;
	}
	Announce ""+getarg(1,"Maze")+" Event Has Begun!",8;
	set $@CurrentEvent,$@CurrentEvent*-1;
	sleep 9000;
	if(getmapusers(getarg(2,"maze"))<getarg(3,1)){ mapannounce getarg(2,"maze"),"Sorry there are not enough players for this event to take place",8;
	} else {
		mapannounce getarg(2,"maze"),"Rules are simple first to get to end of maze wins, so begin~",8;
		disablenpc "mazeroadblock";
		enablenpc "Event_Agent#Maze";
		for(set .@maze,0; .@maze < getarg(4,40); set .@maze,.@maze+1){
			if(getmapusers(getarg(2,"maze"))<1) set .@maze,.@maze+getarg(4,40);
			mapannounce getarg(2,"maze"),"There are "+(getarg(4,40)-.@maze)+" Minuets Remaining",8;
			sleep 60000;
		}
	mapannounce getarg(2,"maze"),"Time Is up",8;
	}
	disablenpc "Event_Agent#Maze";
	sleep 5000;
	mapwarp getarg(2,"maze"),"prontera",155,181;
	set $@CurrentEvent,0;
	end;
}


function	script	PoringRUN	{
//callfunc("PoringRUN",<eventid>,<eventname>,<eventmap>,<minplayers>,<winers>,<length>,<mobID>,<fakeqnt>,<fakenames>);
	explode(.@Mobs$,getarg(8,"Porjng|P0ring|Porlng|Porimg|Porinq|Poporing|This One|Right|Kill Me|Poning|qoring|Pooring|Pouring|Polling|~Poring~|Winner|Prize|Porirg|Paring"),"|");
	mapwarp getarg(2,"pvp_n_1-5"),"prontera",155,181;
	set $@CurrentEvent,getarg(0,5);
	pvpoff getarg(2,"pvp_n_1-5");
	setmapflag getarg(2,"pvp_n_1-5"),mf_noskill;
	for(set .@i,5; .@i > 0; set .@i,.@i-1){
		Announce ""+getarg(1,"Poring")+" Event Will begin in "+.@i+" Mins!",8;
		Announce "Please type @joinevent to join",8;
		sleep 60000;
	}
	Announce ""+getarg(1,"Poring")+" Event Has Begun!",8;
	set $@CurrentEvent,$@CurrentEvent*-1;
	if(getmapusers(getarg(2,"pvp_n_1-5"))<getarg(3,1)){ mapannounce getarg(2,"pvp_n_1-5"),"Sorry there are not enough players for this event to take place",8;
	} else {		mapannounce getarg(2,"pvp_n_1-5"),"Rules are simple",8;
		sleep 3000;	mapannounce getarg(2,"pvp_n_1-5"),"Kill the 'Poring' with the correct name, and get a warped to town with a prize.",8;
		sleep 4000;	mapannounce getarg(2,"pvp_n_1-5"),"Kill the wrong one and get warped to town with nothing.",8;
		sleep 4000;	mapannounce getarg(2,"pvp_n_1-5"),"There "+((getarg(4,2)>1)?"are":"is")+" "+getarg(4,2)+" right poring"+((getarg(4,2)>1)?"s":"")+" and a "+getarg(5,30)+" min timer.",8;
		sleep 4000;	mapannounce getarg(2,"pvp_n_1-5"),"Event will now Begin~",8;
		for(set .@i,2; .@i < getarraysize(.@Mobs$); set .@i,.@i+1){
			monster getarg(2,"pvp_n_1-5"),0,0,.@Mobs$[.@i],getarg(6,1725),getarg(7,5),"PoringPrize::OnKillWrong";
		}
		monster getarg(2,"pvp_n_1-5"),0,0,"--ja--",getarg(6,1725),getarg(4,1),"PoringPrize::OnKillRight";
 		for(set .@poring,0; .@poring < getarg(5,30); set .@poring,.@poring+1){
			if(getmapusers(getarg(2,"pvp_n_1-5"))<1) set .@poring,.@poring+getarg(5,30);
			mapannounce getarg(2,"pvp_n_1-5"),"There are "+(getarg(5,30)-.@poring)+" Minuets Remaining",8;
			sleep 60000;
		}
	}
	mapannounce getarg(2,"pvp_n_1-5"),"Time Is up",8;
	killmonsterall getarg(2,"pvp_n_1-5");
	removemapflag getarg(2,"pvp_n_1-5"),mf_noskill;
	set $@CurrentEvent,0;
	sleep 5000;
	mapwarp getarg(2,"pvp_n_1-5"),"prontera",155,181;
end;
}


function	script	ManHuntRUN	{
//callfunc("ManHuntRUN",<eventid>,<eventname>,<eventmap>,<length>,<minplayers>);
	if($@CurrentEvent||agitcheck()||agitcheck2()){ end; }
	mapwarp getarg(2,"pvp_n_1-5"),"prontera",155,181;
	enablenpc "ManhuntPrize";
	set $@CurrentEvent,getarg(0,6);
	for(set .@i,5; .@i > 0; set .@i,.@i-1){
		Announce ""+getarg(1,"Man Hunt")+" Event Will begin in "+.@i+" Mins!",8;
		Announce "Please type @joinevent to join",8;
		sleep 60000;
	}
	Announce ""+getarg(1,"Man Hunt")+" Event Has Begun!",8;
	set $@CurrentEvent,$@CurrentEvent*-1;
	if(getmapusers(getarg(2,"pvp_n_1-5"))<getarg(4,3)){ mapannounce getarg(2,"pvp_n_1-5"),"Sorry there are not enough players for this event to take place",8;
	} else {		mapannounce getarg(2,"pvp_n_1-5"),"The goal is this event is to kill the target within 60 seconds.",8;
		sleep 5000;	mapannounce getarg(2,"pvp_n_1-5"),"The one who managed to kill the target will gain a prize",8;
		sleep 5000;	mapannounce getarg(2,"pvp_n_1-5"),"But if the target surivived, the target will gain the prize",8;
		sleep 5000;	mapannounce getarg(2,"pvp_n_1-5"),"Man-Hunt Event start!",8;
		for(set .@round,1; .@round < getarg(3,10); set .@round,.@round+1){
			if(getmapusers(getarg(2,"pvp_n_1-5"))<getarg(4,3)){ mapannounce getarg(2,"pvp_n_1-5"),"Sorry there are no longer enough players for another round",8;
			} else {
				if(.@round > 1){ mapannounce getarg(2,"pvp_n_1-5"),"Next Round will begin in 10 seconds!",8; sleep 10000; }
				while(attachrid(getcharid(0,$@PlayerNameList$[$@Target])) && strcharinfo(3)!= getarg(2,"pvp_n_1-5")){
					set $@Target,rand(getarraysize($@PlayerNameList$));
				}
				mapannounce getarg(2,"pvp_n_1-5"),"[Round "+.@round+"] Our target is "+$@PlayerNameList$[$@Target]+"!",8;
				atcommand "killable "+$@PlayerNameList$[$@Target];
				atcommand "size "+$@PlayerNameList$[$@Target]+" 2";
				sleep 60000;
				if($@Target != -1){
					if(attachrid(getcharid(0,$@PlayerNameList$[$@Target])) && strcharinfo(3)== getarg(2,"pvp_n_1-5")){
						announce "Congrats to, "+strcharinfo(0)+" a winner in the "+getarg(1,"Man Hunt")+" Event!",bc_blue|bc_all;
						set Zeny,zeny+50000;
					}
				}
				atcommand "alive "+$@PlayerNameList$[$@Target]+"";
				atcommand "killable "+$@PlayerNameList$[$@Target]+"";
				atcommand "size "+$@PlayerNameList$[$@Target]+" 0";
			}
		}
	}
	disablenpc "ManhuntPrize";
	mapannounce getarg(2,"pvp_n_1-5"),"Event is Over",8;
	sleep 5000;
	mapwarp getarg(2,"pvp_n_1-5"),"prontera",155,181;
	set $@CurrentEvent,0;
}

function	script	LuckyRun	{
//callfunc("LuckyRun",<eventid>,<eventname>,<minplayers>,<winners>);
	if($@CurrentEvent||agitcheck()||agitcheck2()){ end; }
	deletearray $@EventPlayers[0],getarraysize($@EventPlayers);
	set $@CurrentEvent,getarg(0,8);
	for(set .@i,5; .@i > 0; set .@i,.@i-1){
		Announce ""+getarg(1,"Lucky")+" Event Will begin in "+.@i+" Mins!",8;
		Announce "Please type @joinevent to join",8;
		sleep 60000;
	}
	Announce ""+getarg(1,"Lucky")+" Event Has Begun!",8;
	set $@CurrentEvent,-getarg(0,8);
	if(getarraysize($@EventPlayers) >= getarg(2,5)){
		for(.@i = 0; .@i < getarg(3,1) && .@f < getarg(2,5); .@i++){
			if(attachrid($@EventPlayers[rand(getarraysize($@EventPlayers))])){
				if(CheckVending() ){
					DetachRID();
					set .@i,.@i - 1;
					set .@f,.@f + 1;
				} else {
					announce "Congrats to, "+strcharinfo(0)+" a winner in the "+getarg(1,"Lucky")+" Event!",bc_blue|bc_all;
					getitem 7859,1;
					detachrid;
				}
			} else { set .@i,.@i - 1; set .@f,.@f + 1;}
		}
	} else { Announce "Event Stopped! Not Enough Players Joined the "+getarg(1,"Lucky")+" Event!",8; }
	if(.@f >= getarg(2,5)){ Announce "Not Enough Players Joined the "+getarg(1,"Lucky")+" Event, Event Failed!",8; }
	deletearray $@EventPlayers[0],getarraysize($@EventPlayers);
	set $@CurrentEvent,0;
end;
}

function	script	CluckersRun	{
//callfunc("CluckersRun",<eventid>,<eventname>,<Length>);
	if($@CurrentEvent||agitcheck()||agitcheck2()){ end; }
	set $@CurrentEvent,getarg(0,7);
	for(set .@i,5; .@i > 0; set .@i,.@i-1){
		Announce ""+getarg(1,"Cluckers")+" Event Will begin in "+.@i+" Mins!",8;
		Announce "Please type @joinevent to join",8;
		sleep 60000;
	}
	Announce ""+getarg(1,"Cluckers")+" Event Has Begun!",8;
	set $@CurrentEvent,$@CurrentEvent*-1;
	sleep 60000 * getarg(2,30);
	if($@CurrentEvent == -1 * getarg(0,7)) set $@CurrentEvent,0;
end;
}

function	script	BombringRun	{
	if($@CurrentEvent||agitcheck()||agitcheck2()){ end; }
	mapwarp getarg(2,"quiz_02"),"prontera",155,181;
	set $@CurrentEvent,getarg(0,1);
	for(set .@i,5; .@i > 0; set .@i,.@i-1){
		Announce ""+getarg(1,"Bombring")+" Event Will begin in "+.@i+" Mins!",8;
		Announce "Please type @joinevent to join",8;
		sleep 60000;
	}
	Announce ""+getarg(1,"Bombring")+" Event Has Begun!",8;
	set $@CurrentEvent,-getarg(0,9);
	if(getmapusers(getarg(2,"quiz_02"))<getarg(1,0)){
		mapannounce getarg(2,"quiz_02"),"Sorry there are not enough players for this event to take place",8;
		mapwarp getarg(2,"quiz_02"),"prontera",155,181;
	} else {
		setarray .@mapflag,
			mf_nowarp,
			mf_nowarpto,
			mf_nosave,
			mf_nomemo,
			mf_noteleport,
			mf_nopenalty, // disable exp loss
			mf_noreturn,
			mf_nobranch,
			mf_nomobloot, // disable monster drop loots,
			mf_nomvploot, // 2 of these
			mf_partylock;
		for ( .@i = 0; .@i < getarraysize( .@mapflag ); .@i++ )
			setmapflag getarg(2,"quiz_02"), .@mapflag[.@i];
		end;
		set .@totalplayers, getmapusers("quiz_02");
		mapannounce getarg(2,"quiz_02"),"Okay listen up, this is how it works.",bc_all;
		sleep 2000;
		mapannounce getarg(2,"quiz_02"),"Bombrings will run rampant in this area.",bc_all;
		sleep 2000;
		mapannounce getarg(2,"quiz_02"),"and all of them will go booooooom!",bc_all;
		sleep 2000;
		mapannounce getarg(2,"quiz_02"),"all you have to do is avoid them and stay alive :P",bc_all;
		sleep 2000;
		mapannounce getarg(2,"quiz_02"),"This will run for 30 seconds for 5 total rounds.",bc_all;
		sleep 2000;
		mapannounce getarg(2,"quiz_02"),"Sooooooooooo, ready or not here they come!!!", bc_all;
		sleep 25000;
		for(set .@wave,0; .@wave < getarg(4,5); set .@wave,.@wave+1){
			if(.@wave < getarg(4,5)){
				mapannounce getarg(2,"quiz_02"),"Wave "+(.@wave + 1)+"!",8;
			} else {
				mapannounce getarg(2,"quiz_02"),"FIANL WAVE!",8;
			}
			for(set .@i,0; (.@i < getarraysize(.@Mobs)); set .@i,.@i+2){
				if ( (3 * .totalplayers) <= 60){ areamonster getarg(2,"quiz_02"),48,334,71,357,"Run for you life!",1904,3 * .totalplayers;
				} else { areamonster getarg(2,"quiz_02"),48,334,71,357,"Run for you life!",1904,60; }
			}
			if(!getmapusers(getarg(2,"quiz_02"))){
				set .@wave,getarg(4,10)+.@wave;
			} else {
				sleep 1000 * getarg(7,5) / .@wave;
			}
		}
		sleep 30000;
		while(getmapusers(getarg(2,"quiz_02"))){
			for(.@i = 0; .@i < getarraysize($@EventPlayers); .@i++){
				if(attachrid($@EventPlayers[.@i])){
					if(strcharinfo(3) == getarg(2,"pvp_n_1-5")){
						announce "Congrats to, "+strcharinfo(0)+" a winner in the "+getarg(1,"Dice")+" Event!",bc_blue|bc_all;
						getitem 7859,1;
						warp "prontera",155,181;
						detachrid;
					}
				}
			}
		}
	for ( .@i = 0; .@i < getarraysize( .@mapflag ); .@i++ )
		removemapflag getarg(2,"quiz_02"), .@mapflag[.@i];
	end;
	}
	set $@CurrentEvent,0;
	end;
}

//========================= Prizes ======================================


1@zombie,175,120,4	script	ZombiePrize	-1,{
OnKillZombie:
	dispbottom "Don't do that";
	sc_start SC_DECREASEAGI,SC_DECREASEAGI,300000,10;
	percentheal -20,-100;
	heal -5,0;
end;
}

maze,358,148,0	warp	mazeroadblock	2,2,maze,371,149

maze,369,162,4	script	Event_Agent#Maze	405,4,4,{
	mes "[Event Agent]";
	mes "Walk up to me to claim prize~";
	close;
OnTouch:
	announce "Congrats to, "+strcharinfo(0)+" a winner in the Maze Event!",bc_blue|bc_all;
	getitem 7859,1;
	mapwarp getarg(2,"maze"),"prontera",155,181;
	end;
}

-	script	PoringPrize	-1,{
OnKillWrong:
	set .@i,rand(1,(getarraysize($@Mobs)/2))*2;
	monster $@Map$,0,0,$@MobNames$[.@i/2],$@Mobs[.@i],$@Mobs[.@i+1],"PoringPrize::OnKillWrong";
	warp "prontera",155,181;
end;
OnKillRight:
	announce "Congrats to, "+strcharinfo(0)+" a winner in the Poring Event!",bc_blue|bc_all;
	getitem 7859,1;
	warp "prontera",155,181;
end;
}

-	script	ManhuntPrize	-1,{
OnPCDieEvent:
	if ($@CurrentEvent == -6 && strcharinfo(0) == $@PlayerNameList$[$@Target] ){
		if(attachrid(killerrid)) {
			announce "Congrats to, "+strcharinfo(0)+" a winner in the Manhunt Event!",bc_blue|bc_all;
			getitem 7859,1;
			warp "prontera",155,181;
       			}
		set $@Target,-1;
	}
end;
OnPCLogOutEvent:
	if($@CurrentEvent == -10 && strcharinfo(0) == $@PlayerNameList$[$@Target]){
		mapannounce $@Map$,"The target has logged out of this game. This round will be nulled.",0;
		set $@Target,-1;
	}
end;
}

prontera,155,227,4	script	Cluckers	800,{
	if ($@CurrentEvent == -7) {
		specialeffect2 EF_HIT3;
		switch(rand(15)) {
			case 0: npctalk "CLUUUUUUCK!!!"; unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; emotion e_omg; break;
			case 1: npctalk "Cluuuuuck!~"; break;
			case 2: unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; break;
			case 3: sc_start SC_Freeze,10000,0; break;
			case 4: npctalk "CLUUUUUUUUUCK!!!"; unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; emotion e_omg; break;
			case 5: sc_start SC_Sleep,10000,0; break;
			case 6: sc_start SC_Stone,10000,0; emotion e_gg; break;
			case 7: npctalk "CLUUUUUUCK!!!"; unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; emotion e_omg; break;
			case 8: npctalk "Cluck! CLUUUCK!!"; unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; emotion e_omg; break;
			case 9: sc_start SC_Stun,10000,0; break;
			case 10: sc_start SC_Sleep,10000,0; emotion e_gg; break;
			case 11: npctalk "Cluck! Cluck!"; break;
			case 12: sc_start SC_Stun,10000,0; break;
			case 13: unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; break;
			default:
				if (!rand(10)) {
					npctalk "WOOF!...........";
					specialeffect2 EF_SPHERE;
					announce "[Cluck! Cluck! Boom!] " + strcharinfo(0) + " squeezed out the prize! Well done!",0;
					getitem 7859,1;
					set $@CurrentEvent,0;
				} else {
					npctalk "Cluck! CLUUUCK!!";
					unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1;
					npcwalkto rand(152,159),rand(234,241);
				}
				break;
		}
		end;
	}
	mes "Cluck cluck! Cluuuuuck?";
	mes "Cluck....";
	close;
OnTimer15000:
	npcwalkto 70+rand(17),135+rand(16);
	setnpctimer 0;
OnInit:
	npcspeed 75;
	npcwalkto rand(152,159),rand(234,241);
 	initnpctimer;
end;
}


//========================= Other =======================================


prontera,164,175,3	itemshop	Event Headgear Shop	877,7859,5381:50,5391:50,5462:50,5463:75,5596:75,5214:100,5380:100,5210:100,5226:100,5227:100,5228:100,5229:100,5230:100,5231:100,5232:100,5233:100,5234:100,5235:100,5236:100,5237:100,5283:100,5288:100,5293:100,5313:100,5314:100,5315:100,5324:100,5372:100,5376:100,5377:100,5378:100,5503:100,5505:100,5529:100,5286:125,5263:125,5098:125,5382:125,5238:175,5239:175,5240:175,5241:175,5242:175,5374:500
prontera,165,174,3	itemshop	Event Shop	877,7859,12209:1,12211:2,604:3,7621:3,12299:5,12212:5,12311:5,12221:7,608:10,607:15,12208:15,14592:15,12210:15,12214:20,7776:20,12041:10,12042:20,12043:30,12044:40,12045:50,12046:10,12047:20,12048:30,12049:40,12050:50,12051:10,12052:20,12053:30,12054:40,12055:50,12056:10,12057:20,12058:30,12059:40,12060:50,12061:10,12062:20,12063:30,12064:40,12065:50,12066:10,12067:20,12068:30,12069:40,12070:50

